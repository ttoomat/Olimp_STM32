
01Led_CMSIS.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001ac  080000b8  080000b8  000100b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000264  08000264  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000264  08000264  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  08000264  08000264  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000264  08000264  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000264  08000264  00010264  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000268  08000268  00010268  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  0800026c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000008  08000274  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  08000274  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000652  00000000  00000000  00020030  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000218  00000000  00000000  00020682  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  000208a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  00020910  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000bd69  00000000  00000000  00020958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b4a  00000000  00000000  0002c6c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00040cb8  00000000  00000000  0002d20b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0006dec3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000a8  00000000  00000000  0006df14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b8 <__do_global_dtors_aux>:
 80000b8:	b510      	push	{r4, lr}
 80000ba:	4c06      	ldr	r4, [pc, #24]	; (80000d4 <__do_global_dtors_aux+0x1c>)
 80000bc:	7823      	ldrb	r3, [r4, #0]
 80000be:	2b00      	cmp	r3, #0
 80000c0:	d107      	bne.n	80000d2 <__do_global_dtors_aux+0x1a>
 80000c2:	4b05      	ldr	r3, [pc, #20]	; (80000d8 <__do_global_dtors_aux+0x20>)
 80000c4:	2b00      	cmp	r3, #0
 80000c6:	d002      	beq.n	80000ce <__do_global_dtors_aux+0x16>
 80000c8:	4804      	ldr	r0, [pc, #16]	; (80000dc <__do_global_dtors_aux+0x24>)
 80000ca:	e000      	b.n	80000ce <__do_global_dtors_aux+0x16>
 80000cc:	bf00      	nop
 80000ce:	2301      	movs	r3, #1
 80000d0:	7023      	strb	r3, [r4, #0]
 80000d2:	bd10      	pop	{r4, pc}
 80000d4:	20000008 	.word	0x20000008
 80000d8:	00000000 	.word	0x00000000
 80000dc:	0800024c 	.word	0x0800024c

080000e0 <frame_dummy>:
 80000e0:	4b04      	ldr	r3, [pc, #16]	; (80000f4 <frame_dummy+0x14>)
 80000e2:	b510      	push	{r4, lr}
 80000e4:	2b00      	cmp	r3, #0
 80000e6:	d003      	beq.n	80000f0 <frame_dummy+0x10>
 80000e8:	4903      	ldr	r1, [pc, #12]	; (80000f8 <frame_dummy+0x18>)
 80000ea:	4804      	ldr	r0, [pc, #16]	; (80000fc <frame_dummy+0x1c>)
 80000ec:	e000      	b.n	80000f0 <frame_dummy+0x10>
 80000ee:	bf00      	nop
 80000f0:	bd10      	pop	{r4, pc}
 80000f2:	46c0      	nop			; (mov r8, r8)
 80000f4:	00000000 	.word	0x00000000
 80000f8:	2000000c 	.word	0x2000000c
 80000fc:	0800024c 	.word	0x0800024c

08000100 <main>:
#include "stm32g030xx.h"

GPIO_TypeDef * led_port = GPIOA;
uint32_t led_pin = 2;

int main() {
 8000100:	b580      	push	{r7, lr}
 8000102:	b082      	sub	sp, #8
 8000104:	af00      	add	r7, sp, #0
	RCC->IOPENR |= RCC_IOPENR_GPIOAEN;
 8000106:	4b23      	ldr	r3, [pc, #140]	; (8000194 <main+0x94>)
 8000108:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800010a:	4b22      	ldr	r3, [pc, #136]	; (8000194 <main+0x94>)
 800010c:	2101      	movs	r1, #1
 800010e:	430a      	orrs	r2, r1
 8000110:	635a      	str	r2, [r3, #52]	; 0x34
	led_port->MODER &= ~GPIO_MODER_MODE2_Msk;
 8000112:	4b21      	ldr	r3, [pc, #132]	; (8000198 <main+0x98>)
 8000114:	681b      	ldr	r3, [r3, #0]
 8000116:	681a      	ldr	r2, [r3, #0]
 8000118:	4b1f      	ldr	r3, [pc, #124]	; (8000198 <main+0x98>)
 800011a:	681b      	ldr	r3, [r3, #0]
 800011c:	2130      	movs	r1, #48	; 0x30
 800011e:	438a      	bics	r2, r1
 8000120:	601a      	str	r2, [r3, #0]
	led_port->MODER |= GPIO_MODER_MODE2_0;
 8000122:	4b1d      	ldr	r3, [pc, #116]	; (8000198 <main+0x98>)
 8000124:	681b      	ldr	r3, [r3, #0]
 8000126:	681a      	ldr	r2, [r3, #0]
 8000128:	4b1b      	ldr	r3, [pc, #108]	; (8000198 <main+0x98>)
 800012a:	681b      	ldr	r3, [r3, #0]
 800012c:	2110      	movs	r1, #16
 800012e:	430a      	orrs	r2, r1
 8000130:	601a      	str	r2, [r3, #0]
	while (1) {
		led_port->ODR |= (1 << led_pin);
 8000132:	4b19      	ldr	r3, [pc, #100]	; (8000198 <main+0x98>)
 8000134:	681b      	ldr	r3, [r3, #0]
 8000136:	695a      	ldr	r2, [r3, #20]
 8000138:	4b18      	ldr	r3, [pc, #96]	; (800019c <main+0x9c>)
 800013a:	681b      	ldr	r3, [r3, #0]
 800013c:	2101      	movs	r1, #1
 800013e:	4099      	lsls	r1, r3
 8000140:	000b      	movs	r3, r1
 8000142:	0019      	movs	r1, r3
 8000144:	4b14      	ldr	r3, [pc, #80]	; (8000198 <main+0x98>)
 8000146:	681b      	ldr	r3, [r3, #0]
 8000148:	430a      	orrs	r2, r1
 800014a:	615a      	str	r2, [r3, #20]
		for (uint32_t i = 0; i < 1000000; i++);
 800014c:	2300      	movs	r3, #0
 800014e:	607b      	str	r3, [r7, #4]
 8000150:	e002      	b.n	8000158 <main+0x58>
 8000152:	687b      	ldr	r3, [r7, #4]
 8000154:	3301      	adds	r3, #1
 8000156:	607b      	str	r3, [r7, #4]
 8000158:	687b      	ldr	r3, [r7, #4]
 800015a:	4a11      	ldr	r2, [pc, #68]	; (80001a0 <main+0xa0>)
 800015c:	4293      	cmp	r3, r2
 800015e:	d9f8      	bls.n	8000152 <main+0x52>
		led_port->ODR &= ~(1 << led_pin);
 8000160:	4b0d      	ldr	r3, [pc, #52]	; (8000198 <main+0x98>)
 8000162:	681b      	ldr	r3, [r3, #0]
 8000164:	695a      	ldr	r2, [r3, #20]
 8000166:	4b0d      	ldr	r3, [pc, #52]	; (800019c <main+0x9c>)
 8000168:	681b      	ldr	r3, [r3, #0]
 800016a:	2101      	movs	r1, #1
 800016c:	4099      	lsls	r1, r3
 800016e:	000b      	movs	r3, r1
 8000170:	43db      	mvns	r3, r3
 8000172:	0019      	movs	r1, r3
 8000174:	4b08      	ldr	r3, [pc, #32]	; (8000198 <main+0x98>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	400a      	ands	r2, r1
 800017a:	615a      	str	r2, [r3, #20]
		for (uint32_t i = 0; i < 1000000; i++);
 800017c:	2300      	movs	r3, #0
 800017e:	603b      	str	r3, [r7, #0]
 8000180:	e002      	b.n	8000188 <main+0x88>
 8000182:	683b      	ldr	r3, [r7, #0]
 8000184:	3301      	adds	r3, #1
 8000186:	603b      	str	r3, [r7, #0]
 8000188:	683b      	ldr	r3, [r7, #0]
 800018a:	4a05      	ldr	r2, [pc, #20]	; (80001a0 <main+0xa0>)
 800018c:	4293      	cmp	r3, r2
 800018e:	d9f8      	bls.n	8000182 <main+0x82>
		led_port->ODR |= (1 << led_pin);
 8000190:	e7cf      	b.n	8000132 <main+0x32>
 8000192:	46c0      	nop			; (mov r8, r8)
 8000194:	40021000 	.word	0x40021000
 8000198:	20000000 	.word	0x20000000
 800019c:	20000004 	.word	0x20000004
 80001a0:	000f423f 	.word	0x000f423f

080001a4 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001a4:	b580      	push	{r7, lr}
 80001a6:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80001a8:	46c0      	nop			; (mov r8, r8)
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bd80      	pop	{r7, pc}
	...

080001b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001b0:	480d      	ldr	r0, [pc, #52]	; (80001e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001b2:	4685      	mov	sp, r0

/* Call the clock system initialization function.*/
  bl  SystemInit
 80001b4:	f7ff fff6 	bl	80001a4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001b8:	480c      	ldr	r0, [pc, #48]	; (80001ec <LoopForever+0x6>)
  ldr r1, =_edata
 80001ba:	490d      	ldr	r1, [pc, #52]	; (80001f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001bc:	4a0d      	ldr	r2, [pc, #52]	; (80001f4 <LoopForever+0xe>)
  movs r3, #0
 80001be:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001c0:	e002      	b.n	80001c8 <LoopCopyDataInit>

080001c2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001c2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001c4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001c6:	3304      	adds	r3, #4

080001c8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001c8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001ca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001cc:	d3f9      	bcc.n	80001c2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001ce:	4a0a      	ldr	r2, [pc, #40]	; (80001f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001d0:	4c0a      	ldr	r4, [pc, #40]	; (80001fc <LoopForever+0x16>)
  movs r3, #0
 80001d2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001d4:	e001      	b.n	80001da <LoopFillZerobss>

080001d6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001d6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001d8:	3204      	adds	r2, #4

080001da <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001da:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001dc:	d3fb      	bcc.n	80001d6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001de:	f000 f811 	bl	8000204 <__libc_init_array>
/* Call the application s entry point.*/
  bl main
 80001e2:	f7ff ff8d 	bl	8000100 <main>

080001e6 <LoopForever>:

LoopForever:
  b LoopForever
 80001e6:	e7fe      	b.n	80001e6 <LoopForever>
  ldr   r0, =_estack
 80001e8:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80001ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80001f0:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 80001f4:	0800026c 	.word	0x0800026c
  ldr r2, =_sbss
 80001f8:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 80001fc:	20000024 	.word	0x20000024

08000200 <ADC1_IRQHandler>:
 * @retval None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000200:	e7fe      	b.n	8000200 <ADC1_IRQHandler>
	...

08000204 <__libc_init_array>:
 8000204:	b570      	push	{r4, r5, r6, lr}
 8000206:	2600      	movs	r6, #0
 8000208:	4d0c      	ldr	r5, [pc, #48]	; (800023c <__libc_init_array+0x38>)
 800020a:	4c0d      	ldr	r4, [pc, #52]	; (8000240 <__libc_init_array+0x3c>)
 800020c:	1b64      	subs	r4, r4, r5
 800020e:	10a4      	asrs	r4, r4, #2
 8000210:	42a6      	cmp	r6, r4
 8000212:	d109      	bne.n	8000228 <__libc_init_array+0x24>
 8000214:	2600      	movs	r6, #0
 8000216:	f000 f819 	bl	800024c <_init>
 800021a:	4d0a      	ldr	r5, [pc, #40]	; (8000244 <__libc_init_array+0x40>)
 800021c:	4c0a      	ldr	r4, [pc, #40]	; (8000248 <__libc_init_array+0x44>)
 800021e:	1b64      	subs	r4, r4, r5
 8000220:	10a4      	asrs	r4, r4, #2
 8000222:	42a6      	cmp	r6, r4
 8000224:	d105      	bne.n	8000232 <__libc_init_array+0x2e>
 8000226:	bd70      	pop	{r4, r5, r6, pc}
 8000228:	00b3      	lsls	r3, r6, #2
 800022a:	58eb      	ldr	r3, [r5, r3]
 800022c:	4798      	blx	r3
 800022e:	3601      	adds	r6, #1
 8000230:	e7ee      	b.n	8000210 <__libc_init_array+0xc>
 8000232:	00b3      	lsls	r3, r6, #2
 8000234:	58eb      	ldr	r3, [r5, r3]
 8000236:	4798      	blx	r3
 8000238:	3601      	adds	r6, #1
 800023a:	e7f2      	b.n	8000222 <__libc_init_array+0x1e>
 800023c:	08000264 	.word	0x08000264
 8000240:	08000264 	.word	0x08000264
 8000244:	08000264 	.word	0x08000264
 8000248:	08000268 	.word	0x08000268

0800024c <_init>:
 800024c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800024e:	46c0      	nop			; (mov r8, r8)
 8000250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000252:	bc08      	pop	{r3}
 8000254:	469e      	mov	lr, r3
 8000256:	4770      	bx	lr

08000258 <_fini>:
 8000258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800025a:	46c0      	nop			; (mov r8, r8)
 800025c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800025e:	bc08      	pop	{r3}
 8000260:	469e      	mov	lr, r3
 8000262:	4770      	bx	lr
